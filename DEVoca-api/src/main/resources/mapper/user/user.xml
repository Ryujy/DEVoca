<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.devoca.user.model.mapper.UserMapper">

    <resultMap id="getUserDTO" type="UserDTO">
        <id property="userIdx" column="user_idx"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="userBirth" column="user_birth"/>
        <result property="userEmail" column="user_email"/>
        <result property="userNickname" column="user_nickname"/>
        <result property="userIntro" column="user_intro"/>
        <result property="userExp" column="user_exp"/>
        <result property="userImg" column="user_img"/>
        <result property="userJoinDate" column="user_join_date"/>
        <result property="userUpdateDate" column="user_update_date"/>
        <result property="userRevokeDate" column="user_revoke_date"/>
        <result property="userRefreshToken" column="user_refresh_token"/>
    </resultMap>

    <!--  userId로 userIdx 불러오기  -->
    <select id="userIdxLoad" parameterType="String" resultType="Integer">
        select user_idx from users where user_id = #{userId}
    </select>

    <select id="checkUser" parameterType="long" resultType="Integer">
        select count(user_id) from users where user_id = #{id}
    </select>

    <insert id="joinUser" parameterType="UserDTO">
        insert into users (user_id, user_name, user_birth, user_email, user_nickname, user_join_date)
        values (#{userId}, #{userName}, #{userBirth}, #{userEmail}, #{userNickname}, now())
    </insert>

    <!-- 회원 정보 조회 -->
    <select id="getUserInfo" parameterType="Integer" resultMap="getUserDTO">
        select user_id, user_name, user_nickname
             , user_birth, user_email, user_intro, user_exp
             , (select count(follow_from) from follows where follow_from = #{userIdx}) as userFollowingCnt
             , (select count(follow_to) from follows where follow_to = #{userIdx}) as userFollowerCnt
             , (select count(ub_badge_id) from user_badges where ub_user_idx = #{userIdx}) as userBgCnt
        from users
        where user_idx = #{userIdx}
    </select>

    <update id="updateUserInfo" parameterType="UserDTO">
        update users
        <set>
            <if test="userNickname != null">
                user_nickname = #{userNickname},
            </if>
            <if test="userIntro != null">
                user_intro = #{userIntro},
            </if>
        </set>
        where user_idx=#{userIdx};
    </update>
</mapper>